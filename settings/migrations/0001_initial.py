# Generated by Django 5.1.7 on 2025-03-26 07:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BackupConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "storage_type",
                    models.CharField(
                        choices=[
                            ("LOCAL", "Local Storage"),
                            ("FTP", "FTP"),
                            ("SFTP", "SFTP"),
                            ("S3", "Amazon S3"),
                            ("CLOUD", "Cloud Storage"),
                        ],
                        max_length=10,
                    ),
                ),
                ("storage_path", models.CharField(max_length=255)),
                ("retention_days", models.IntegerField(default=30)),
                ("max_backups", models.IntegerField(null=True)),
                ("include_files", models.BooleanField(default=True)),
                ("include_database", models.BooleanField(default=True)),
                (
                    "compression_type",
                    models.CharField(
                        choices=[
                            ("NONE", "No Compression"),
                            ("GZIP", "Gzip"),
                            ("ZIP", "Zip"),
                        ],
                        default="GZIP",
                        max_length=10,
                    ),
                ),
                ("encryption_enabled", models.BooleanField(default=False)),
                ("encryption_key", models.CharField(blank=True, max_length=255)),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual"),
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                        ],
                        default="MANUAL",
                        max_length=10,
                    ),
                ),
                ("schedule_time", models.TimeField(default="00:00:00")),
                ("schedule_day", models.CharField(blank=True, max_length=20)),
                ("enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_backup_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_backup_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Configuration",
                "verbose_name_plural": "Backup Configurations",
            },
        ),
        migrations.CreateModel(
            name="BackupLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("file_size", models.BigIntegerField(null=True)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="RUNNING",
                        max_length=10,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("FULL", "Full Backup"),
                            ("DATABASE", "Database Only"),
                            ("FILES", "Files Only"),
                        ],
                        default="FULL",
                        max_length=10,
                    ),
                ),
                ("storage_path", models.CharField(max_length=255)),
                ("error_message", models.TextField(blank=True)),
                ("includes_database", models.BooleanField(default=True)),
                ("includes_files", models.BooleanField(default=True)),
                ("is_compressed", models.BooleanField(default=True)),
                ("is_encrypted", models.BooleanField(default=False)),
                ("checksum", models.CharField(blank=True, max_length=64)),
                ("initiated_by", models.CharField(default="SYSTEM", max_length=50)),
                (
                    "backup_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="backup_logs",
                        to="settings.backupconfig",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Backup Log",
                "verbose_name_plural": "Backup Logs",
            },
        ),
        migrations.CreateModel(
            name="LDAPConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("server_url", models.CharField(max_length=255)),
                ("port", models.IntegerField(default=389)),
                ("use_ssl", models.BooleanField(default=False)),
                ("bind_dn", models.CharField(blank=True, max_length=255)),
                ("bind_password", models.CharField(blank=True, max_length=255)),
                ("search_base", models.CharField(max_length=255)),
                ("user_search_filter", models.CharField(max_length=255)),
                ("group_search_filter", models.CharField(blank=True, max_length=255)),
                ("user_id_attribute", models.CharField(default="uid", max_length=50)),
                (
                    "user_email_attribute",
                    models.CharField(default="mail", max_length=50),
                ),
                (
                    "user_display_name_attribute",
                    models.CharField(default="cn", max_length=50),
                ),
                ("group_id_attribute", models.CharField(default="cn", max_length=50)),
                (
                    "group_member_attribute",
                    models.CharField(default="member", max_length=50),
                ),
                ("enabled", models.BooleanField(default=False)),
                (
                    "connection_timeout",
                    models.IntegerField(
                        default=5000,
                        validators=[
                            django.core.validators.MinValueValidator(1000),
                            django.core.validators.MaxValueValidator(30000),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_ldap_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="updated_ldap_configs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "LDAP Configuration",
                "verbose_name_plural": "LDAP Configurations",
            },
        ),
        migrations.CreateModel(
            name="LDAPSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("USERS", "Users"),
                            ("GROUPS", "Groups"),
                            ("ALL", "All"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="RUNNING",
                        max_length=10,
                    ),
                ),
                ("total_items", models.IntegerField(default=0)),
                ("items_processed", models.IntegerField(default=0)),
                ("items_created", models.IntegerField(default=0)),
                ("items_updated", models.IntegerField(default=0)),
                ("items_deleted", models.IntegerField(default=0)),
                ("items_failed", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ldap_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sync_logs",
                        to="settings.ldapconfig",
                    ),
                ),
            ],
            options={
                "verbose_name": "LDAP Sync Log",
                "verbose_name_plural": "LDAP Sync Logs",
            },
        ),
        migrations.CreateModel(
            name="RestoreLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("RUNNING", "Running"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="RUNNING",
                        max_length=10,
                    ),
                ),
                (
                    "restore_type",
                    models.CharField(
                        choices=[
                            ("FULL", "Full Restore"),
                            ("DATABASE", "Database Only"),
                            ("FILES", "Files Only"),
                            ("PARTIAL", "Partial Restore"),
                        ],
                        max_length=10,
                    ),
                ),
                ("restored_items", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                (
                    "backup_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="restore_logs",
                        to="settings.backuplog",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Restore Log",
                "verbose_name_plural": "Restore Logs",
            },
        ),
        migrations.CreateModel(
            name="LDAPGroupMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ldap_group_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_sync_at", models.DateTimeField(null=True)),
                (
                    "ldap_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="group_mappings",
                        to="settings.ldapconfig",
                    ),
                ),
                (
                    "local_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ldap_mappings",
                        to="auth.group",
                    ),
                ),
            ],
            options={
                "verbose_name": "LDAP Group Mapping",
                "verbose_name_plural": "LDAP Group Mappings",
                "unique_together": {
                    ("ldap_config", "ldap_group_id"),
                    ("ldap_config", "local_group"),
                },
            },
        ),
        migrations.CreateModel(
            name="LDAPUserMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ldap_user_id", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_sync_at", models.DateTimeField(null=True)),
                (
                    "ldap_config",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_mappings",
                        to="settings.ldapconfig",
                    ),
                ),
                (
                    "local_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ldap_mappings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "LDAP User Mapping",
                "verbose_name_plural": "LDAP User Mappings",
                "unique_together": {
                    ("ldap_config", "ldap_user_id"),
                    ("ldap_config", "local_user"),
                },
            },
        ),
    ]
