# Generated by Django 5.1.7 on 2025-03-26 07:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIAgent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("GENERAL", "General"),
                            ("SPECIALIZED", "Specialized"),
                            ("CUSTOM", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                ("configuration", models.JSONField(blank=True, null=True)),
                ("system_prompt", models.TextField(blank=True, null=True)),
                ("capabilities", models.JSONField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("MAINTENANCE", "Maintenance"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("version", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_agents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_agents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIChat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150)),
                ("description", models.TextField(blank=True, null=True)),
                ("chat_settings", models.JSONField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("ARCHIVED", "Archived"),
                            ("DELETED", "Deleted"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("last_message_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ai_agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="chats",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_chats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_chats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("USER", "User"),
                            ("ASSISTANT", "Assistant"),
                            ("SYSTEM", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message_order", models.IntegerField()),
                ("tokens_input", models.IntegerField(default=0)),
                ("tokens_output", models.IntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="intelligence.aichat",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIChatAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_path", models.CharField(max_length=255)),
                ("file_name", models.CharField(max_length=255)),
                ("file_type", models.CharField(max_length=100)),
                ("file_size", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="intelligence.aichatmessage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("provider", models.CharField(max_length=50)),
                ("model_id", models.CharField(max_length=100)),
                ("version", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("DEPRECATED", "Deprecated"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("capabilities", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_models",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_models",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="aichatmessage",
            name="model",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="messages",
                to="intelligence.aimodel",
            ),
        ),
        migrations.CreateModel(
            name="AIAgentModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_primary", models.BooleanField(default=False)),
                ("configuration", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_models",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="model_agents",
                        to="intelligence.aimodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIPrompt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("content", models.TextField()),
                ("variables", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_prompts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_prompts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIPromptVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version_number", models.IntegerField()),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_prompt_versions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "prompt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="versions",
                        to="intelligence.aiprompt",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIReferenceData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usage",
                    models.CharField(
                        choices=[
                            ("TRAINING", "Training"),
                            ("REFERENCE", "Reference"),
                            ("FINE_TUNING", "Fine Tuning"),
                            ("CONTEXT", "Context"),
                        ],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ai_agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reference_data",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_ai_references",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                    ),
                ),
                ("input_data", models.JSONField(blank=True, null=True)),
                ("output_data", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tasks",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_ai_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tasks",
                        to="intelligence.aimodel",
                    ),
                ),
                (
                    "prompt",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="tasks",
                        to="intelligence.aiprompt",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_ai_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITaskFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("POSITIVE", "Positive"),
                            ("NEGATIVE", "Negative"),
                            ("NEUTRAL", "Neutral"),
                        ],
                        max_length=10,
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("rating", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="given_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="intelligence.aitask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITaskLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("INFO", "Info"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("DEBUG", "Debug"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="intelligence.aitask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITaskResource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("FILE", "File"),
                            ("FOLDER", "Folder"),
                            ("PROJECT", "Project"),
                            ("WORKSPACE", "Workspace"),
                            ("DATABASE", "Database"),
                            ("API", "API"),
                            ("DOCUMENT", "Document"),
                            ("CODE", "Code"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("resource_id", models.BigIntegerField(blank=True, null=True)),
                (
                    "resource_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("resource_name", models.CharField(max_length=255)),
                ("resource_metadata", models.JSONField(blank=True, null=True)),
                ("is_input", models.BooleanField(default=True)),
                ("is_output", models.BooleanField(default=False)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSED", "Processed"),
                            ("FAILED", "Failed"),
                            ("SKIPPED", "Skipped"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("processing_result", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="intelligence.aitask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITaskResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("result_type", models.CharField(max_length=50)),
                ("content", models.JSONField()),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="results",
                        to="intelligence.aitask",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AITool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("EMAIL_PROCESSOR", "Email Processor"),
                            ("FILE_ANALYZER", "File Analyzer"),
                            ("PROJECT_MANAGER", "Project Manager"),
                            ("CODE_GENERATOR", "Code Generator"),
                            ("DATA_EXTRACTOR", "Data Extractor"),
                            ("CUSTOM", "Custom"),
                        ],
                        max_length=20,
                    ),
                ),
                ("capabilities", models.JSONField(blank=True, null=True)),
                ("configuration", models.JSONField(blank=True, null=True)),
                (
                    "api_endpoint",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("version", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("DEPRECATED", "Deprecated"),
                        ],
                        default="ACTIVE",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_tools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated_tools",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIAgentTool",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("configuration", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agent_tools",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tool_agents",
                        to="intelligence.aitool",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AIUsageStat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usage_type",
                    models.CharField(
                        choices=[
                            ("CHAT", "Chat"),
                            ("TASK", "Task"),
                            ("PROMPT", "Prompt"),
                            ("TOOL_CALL", "Tool Call"),
                        ],
                        max_length=20,
                    ),
                ),
                ("resource_id", models.BigIntegerField(blank=True, null=True)),
                ("tokens_input", models.IntegerField(default=0)),
                ("tokens_output", models.IntegerField(default=0)),
                ("duration_ms", models.IntegerField(default=0)),
                (
                    "cost",
                    models.DecimalField(decimal_places=6, default=0, max_digits=10),
                ),
                ("success", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ai_agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usage_stats",
                        to="intelligence.aiagent",
                    ),
                ),
                (
                    "ai_model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usage_stats",
                        to="intelligence.aimodel",
                    ),
                ),
                (
                    "ai_tool",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usage_stats",
                        to="intelligence.aitool",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="usage_stats",
                        to="intelligence.aitask",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="ai_usage",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="aiagent",
            index=models.Index(
                fields=["type", "status"], name="intelligenc_type_47b3ec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aiagent",
            index=models.Index(
                fields=["created_by"], name="intelligenc_created_c27cb3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aiagent",
            index=models.Index(
                fields=["updated_by"], name="intelligenc_updated_dcaa6a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aichat",
            index=models.Index(
                fields=["ai_agent", "status", "created_by"],
                name="intelligenc_ai_agen_49ebe8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aichat",
            index=models.Index(
                fields=["created_by", "last_message_at"],
                name="intelligenc_created_fd961e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aichatattachment",
            index=models.Index(
                fields=["message"], name="intelligenc_message_50a5dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aichatattachment",
            index=models.Index(
                fields=["file_type"], name="intelligenc_file_ty_5eda73_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aimodel",
            index=models.Index(
                fields=["provider", "model_id"], name="intelligenc_provide_a57071_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aimodel",
            index=models.Index(fields=["status"], name="intelligenc_status_75b785_idx"),
        ),
        migrations.AddIndex(
            model_name="aichatmessage",
            index=models.Index(
                fields=["chat", "message_order"], name="intelligenc_chat_id_fd14ca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aichatmessage",
            index=models.Index(
                fields=["chat", "role"], name="intelligenc_chat_id_bc1ec0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aichatmessage",
            index=models.Index(fields=["model"], name="intelligenc_model_i_a02f1d_idx"),
        ),
        migrations.AddIndex(
            model_name="aiagentmodel",
            index=models.Index(
                fields=["agent", "is_primary"], name="intelligenc_agent_i_841d56_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aiagentmodel",
            unique_together={("agent", "model")},
        ),
        migrations.AddIndex(
            model_name="aipromptversion",
            index=models.Index(
                fields=["created_by"], name="intelligenc_created_dbdf57_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aipromptversion",
            unique_together={("prompt", "version_number")},
        ),
        migrations.AddIndex(
            model_name="aireferencedata",
            index=models.Index(
                fields=["ai_agent"], name="intelligenc_ai_agen_7245dc_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aireferencedata",
            unique_together={("ai_agent", "usage")},
        ),
        migrations.AddIndex(
            model_name="aitask",
            index=models.Index(
                fields=["status", "priority"], name="intelligenc_status_9fe547_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitask",
            index=models.Index(fields=["agent"], name="intelligenc_agent_i_f95f04_idx"),
        ),
        migrations.AddIndex(
            model_name="aitask",
            index=models.Index(fields=["model"], name="intelligenc_model_i_a4fda0_idx"),
        ),
        migrations.AddIndex(
            model_name="aitask",
            index=models.Index(
                fields=["created_by"], name="intelligenc_created_8b6532_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitaskfeedback",
            index=models.Index(fields=["task"], name="intelligenc_task_id_3bd296_idx"),
        ),
        migrations.AddIndex(
            model_name="aitaskfeedback",
            index=models.Index(
                fields=["feedback_type"], name="intelligenc_feedbac_2da981_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitasklog",
            index=models.Index(fields=["task"], name="intelligenc_task_id_e6b5a9_idx"),
        ),
        migrations.AddIndex(
            model_name="aitasklog",
            index=models.Index(fields=["level"], name="intelligenc_level_2d7609_idx"),
        ),
        migrations.AddIndex(
            model_name="aitaskresource",
            index=models.Index(
                fields=["task", "resource_type"], name="intelligenc_task_id_5709f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitaskresource",
            index=models.Index(
                fields=["task", "is_input", "is_output"],
                name="intelligenc_task_id_3559c5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aitaskresource",
            index=models.Index(
                fields=["task", "processing_status"],
                name="intelligenc_task_id_9c7d4e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="aitaskresult",
            index=models.Index(fields=["task"], name="intelligenc_task_id_6a23d7_idx"),
        ),
        migrations.AddIndex(
            model_name="aitaskresult",
            index=models.Index(
                fields=["result_type"], name="intelligenc_result__8c9980_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitool",
            index=models.Index(
                fields=["type", "status"], name="intelligenc_type_178d49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aitool",
            index=models.Index(
                fields=["created_by"], name="intelligenc_created_87e1fb_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aitool",
            unique_together={("name", "version")},
        ),
        migrations.AlterUniqueTogether(
            name="aiagenttool",
            unique_together={("agent", "tool")},
        ),
        migrations.AddIndex(
            model_name="aiusagestat",
            index=models.Index(
                fields=["user", "created_at"], name="intelligenc_user_id_19c917_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aiusagestat",
            index=models.Index(
                fields=["ai_agent", "ai_model"], name="intelligenc_ai_agen_fcf206_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aiusagestat",
            index=models.Index(fields=["task"], name="intelligenc_task_id_dac0fa_idx"),
        ),
        migrations.AddIndex(
            model_name="aiusagestat",
            index=models.Index(
                fields=["usage_type", "success"], name="intelligenc_usage_t_32d5b3_idx"
            ),
        ),
    ]
